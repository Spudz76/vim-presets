" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" load pathogen bundle autoloader
execute pathogen#infect('bundle/{}', '/usr/share/vim/vim73/bundle/{}')

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if &t_Co > 2
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
set background=dark
highlight comment ctermfg=darkgray

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

" Set the automatic ^M filter for PHP files
let PHP_removeCRwhenUnix = 1

set noexpandtab
set shiftwidth=4
set softtabstop=4
set tabstop=4

if has("autocmd")
  augroup js_style
    au!
    au FileType javascript set expandtab
    au FileType javascript set shiftround
    au FileType javascript set shiftwidth=2
    au FileType javascript set softtabstop=2
    au FileType javascript set tabstop=2
    au FileType jade set expandtab
    au FileType jade set shiftround
    au FileType jade set shiftwidth=2
    au FileType jade set softtabstop=2
    au FileType jade set tabstop=2
    au FileType stylus set expandtab
    au FileType stylus set shiftround
    au FileType stylus set shiftwidth=2
    au FileType stylus set softtabstop=2
    au FileType stylus set tabstop=2
  augroup END
endif

" JSHint settings
"let jshint2_save = 1
nnoremap <silent><F1> :JSHint<CR>
inoremap <silent><F1> <C-O>:JSHint<CR>
vnoremap <silent><F1> :JSHint<CR>
cnoremap <F1> JSHint

if has("autocmd")
    augroup markdown
        au!
        au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
    augroup END
endif

set list
set listchars=tab:»·,trail:·,nbsp:·,eol:¶,precedes:<,extends:>

"force a sudo save if the file is unwritable
cmap w!! :silent w !sudo tee % >/dev/null<CR>

"quick draw quote replacement
nmap <leader>' <Esc>:%s/'/"/g<CR>

"npm version magic for package.json dependencies lines
function! Npm_version()
  let line = getline(".")
  let pkg = line[stridx(line,"\"")+1:stridx(line,"\"",stridx(line,"\"")+1)-1]
  :if pkg!=""
  let ver = matchstr(system("npm -q info ".shellescape(pkg)." version | grep ^[0-9]"),"[0-9\.]*")
  :if ver!=""
  return ver
  :endif
  :endif
endfunction
map <F8> <Esc>0/:<CR>DA: "<C-R>=Npm_version()<CR>"<Esc>?\.<CR>ldwix<Esc>$

"setup column hints
set nowrap
set textwidth=80
set cc=+1  " highlight column after 'textwidth'
hi ColorColumn ctermbg=darkblue guibg=#D9D9FF
